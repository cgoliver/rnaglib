name: build

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest Cython
          pip install torch==1.12.0 torch-scatter==2.0.9 torch-sparse==0.6.15 torch-cluster==1.6.0 torch-spline-conv==1.2.1 torch-geometric==2.1.0.post1 -f https://data.pyg.org/whl/torch-1.12.0+cpu.html
          pip install tensorflow
          pip install dgl
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install CD-Hit 
        run: |
          wget https://github.com/weizhongli/cdhit/releases/download/V4.8.1/cd-hit-v4.8.1-2019-0228.tar.gz
          tar -xzvf cd-hit-v4.8.1-2019-0228.tar.gz
          cd cd-hit-v4.8.1-2019-0228
          make
          chmod u+x cd-hit
          export PATH=$(pwd):$PATH
      - name: Install rna-align 
        run: |
          wget https://zhanggroup.org/RNA-align/bin/RNAalign.tar.bz2
          tar -xvjf RNAalign.tar.bz2
          cd RNAalign
          g++ -O3 -ffast-math -o RNAalign RNAalign.cpp -static
          chmod u+x RNAalign
          export PATH=$(pwd):$PATH
      - name: Test with pytest
        run: |
          export PATH=$(pwd):$PATH
          pip install -r requirements.txt
          pip install coverage
          coverage run --source src/rnaglib -m pytest
          coverage report -m
          coverage xml
      - name: Upload Coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          flags: pytest
          name: rnaglib 
          fail_ci_if_error: true
          verbose: true 
